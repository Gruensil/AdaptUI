/**
 * generated by Xtext 2.12.0
 */
package org.xtext.adaptui.adaptUI.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.adaptui.adaptUI.AdaptUIPackage;
import org.xtext.adaptui.adaptUI.UpdateType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Update Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.adaptui.adaptUI.impl.UpdateTypeImpl#getEvent <em>Event</em>}</li>
 *   <li>{@link org.xtext.adaptui.adaptUI.impl.UpdateTypeImpl#getSlow <em>Slow</em>}</li>
 *   <li>{@link org.xtext.adaptui.adaptUI.impl.UpdateTypeImpl#getFast <em>Fast</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UpdateTypeImpl extends MinimalEObjectImpl.Container implements UpdateType
{
  /**
   * The default value of the '{@link #getEvent() <em>Event</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvent()
   * @generated
   * @ordered
   */
  protected static final String EVENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEvent() <em>Event</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvent()
   * @generated
   * @ordered
   */
  protected String event = EVENT_EDEFAULT;

  /**
   * The default value of the '{@link #getSlow() <em>Slow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlow()
   * @generated
   * @ordered
   */
  protected static final String SLOW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSlow() <em>Slow</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlow()
   * @generated
   * @ordered
   */
  protected String slow = SLOW_EDEFAULT;

  /**
   * The default value of the '{@link #getFast() <em>Fast</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFast()
   * @generated
   * @ordered
   */
  protected static final String FAST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFast() <em>Fast</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFast()
   * @generated
   * @ordered
   */
  protected String fast = FAST_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UpdateTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AdaptUIPackage.Literals.UPDATE_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEvent()
  {
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEvent(String newEvent)
  {
    String oldEvent = event;
    event = newEvent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AdaptUIPackage.UPDATE_TYPE__EVENT, oldEvent, event));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSlow()
  {
    return slow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSlow(String newSlow)
  {
    String oldSlow = slow;
    slow = newSlow;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AdaptUIPackage.UPDATE_TYPE__SLOW, oldSlow, slow));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFast()
  {
    return fast;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFast(String newFast)
  {
    String oldFast = fast;
    fast = newFast;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AdaptUIPackage.UPDATE_TYPE__FAST, oldFast, fast));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AdaptUIPackage.UPDATE_TYPE__EVENT:
        return getEvent();
      case AdaptUIPackage.UPDATE_TYPE__SLOW:
        return getSlow();
      case AdaptUIPackage.UPDATE_TYPE__FAST:
        return getFast();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AdaptUIPackage.UPDATE_TYPE__EVENT:
        setEvent((String)newValue);
        return;
      case AdaptUIPackage.UPDATE_TYPE__SLOW:
        setSlow((String)newValue);
        return;
      case AdaptUIPackage.UPDATE_TYPE__FAST:
        setFast((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AdaptUIPackage.UPDATE_TYPE__EVENT:
        setEvent(EVENT_EDEFAULT);
        return;
      case AdaptUIPackage.UPDATE_TYPE__SLOW:
        setSlow(SLOW_EDEFAULT);
        return;
      case AdaptUIPackage.UPDATE_TYPE__FAST:
        setFast(FAST_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AdaptUIPackage.UPDATE_TYPE__EVENT:
        return EVENT_EDEFAULT == null ? event != null : !EVENT_EDEFAULT.equals(event);
      case AdaptUIPackage.UPDATE_TYPE__SLOW:
        return SLOW_EDEFAULT == null ? slow != null : !SLOW_EDEFAULT.equals(slow);
      case AdaptUIPackage.UPDATE_TYPE__FAST:
        return FAST_EDEFAULT == null ? fast != null : !FAST_EDEFAULT.equals(fast);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (event: ");
    result.append(event);
    result.append(", slow: ");
    result.append(slow);
    result.append(", fast: ");
    result.append(fast);
    result.append(')');
    return result.toString();
  }

} //UpdateTypeImpl
