/**
 * generated by Xtext 2.12.0
 */
package org.xtext.adaptui.adaptUI.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.adaptui.adaptUI.AdaptUIPackage;
import org.xtext.adaptui.adaptUI.ChangeColorSchemeOperation;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Change Color Scheme Operation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.adaptui.adaptUI.impl.ChangeColorSchemeOperationImpl#getColorPrimary <em>Color Primary</em>}</li>
 *   <li>{@link org.xtext.adaptui.adaptUI.impl.ChangeColorSchemeOperationImpl#getColorSecondary <em>Color Secondary</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ChangeColorSchemeOperationImpl extends MinimalEObjectImpl.Container implements ChangeColorSchemeOperation
{
  /**
   * The default value of the '{@link #getColorPrimary() <em>Color Primary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColorPrimary()
   * @generated
   * @ordered
   */
  protected static final String COLOR_PRIMARY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getColorPrimary() <em>Color Primary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColorPrimary()
   * @generated
   * @ordered
   */
  protected String colorPrimary = COLOR_PRIMARY_EDEFAULT;

  /**
   * The default value of the '{@link #getColorSecondary() <em>Color Secondary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColorSecondary()
   * @generated
   * @ordered
   */
  protected static final String COLOR_SECONDARY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getColorSecondary() <em>Color Secondary</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColorSecondary()
   * @generated
   * @ordered
   */
  protected String colorSecondary = COLOR_SECONDARY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ChangeColorSchemeOperationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AdaptUIPackage.Literals.CHANGE_COLOR_SCHEME_OPERATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getColorPrimary()
  {
    return colorPrimary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setColorPrimary(String newColorPrimary)
  {
    String oldColorPrimary = colorPrimary;
    colorPrimary = newColorPrimary;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AdaptUIPackage.CHANGE_COLOR_SCHEME_OPERATION__COLOR_PRIMARY, oldColorPrimary, colorPrimary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getColorSecondary()
  {
    return colorSecondary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setColorSecondary(String newColorSecondary)
  {
    String oldColorSecondary = colorSecondary;
    colorSecondary = newColorSecondary;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AdaptUIPackage.CHANGE_COLOR_SCHEME_OPERATION__COLOR_SECONDARY, oldColorSecondary, colorSecondary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AdaptUIPackage.CHANGE_COLOR_SCHEME_OPERATION__COLOR_PRIMARY:
        return getColorPrimary();
      case AdaptUIPackage.CHANGE_COLOR_SCHEME_OPERATION__COLOR_SECONDARY:
        return getColorSecondary();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AdaptUIPackage.CHANGE_COLOR_SCHEME_OPERATION__COLOR_PRIMARY:
        setColorPrimary((String)newValue);
        return;
      case AdaptUIPackage.CHANGE_COLOR_SCHEME_OPERATION__COLOR_SECONDARY:
        setColorSecondary((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AdaptUIPackage.CHANGE_COLOR_SCHEME_OPERATION__COLOR_PRIMARY:
        setColorPrimary(COLOR_PRIMARY_EDEFAULT);
        return;
      case AdaptUIPackage.CHANGE_COLOR_SCHEME_OPERATION__COLOR_SECONDARY:
        setColorSecondary(COLOR_SECONDARY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AdaptUIPackage.CHANGE_COLOR_SCHEME_OPERATION__COLOR_PRIMARY:
        return COLOR_PRIMARY_EDEFAULT == null ? colorPrimary != null : !COLOR_PRIMARY_EDEFAULT.equals(colorPrimary);
      case AdaptUIPackage.CHANGE_COLOR_SCHEME_OPERATION__COLOR_SECONDARY:
        return COLOR_SECONDARY_EDEFAULT == null ? colorSecondary != null : !COLOR_SECONDARY_EDEFAULT.equals(colorSecondary);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (colorPrimary: ");
    result.append(colorPrimary);
    result.append(", colorSecondary: ");
    result.append(colorSecondary);
    result.append(')');
    return result.toString();
  }

} //ChangeColorSchemeOperationImpl
