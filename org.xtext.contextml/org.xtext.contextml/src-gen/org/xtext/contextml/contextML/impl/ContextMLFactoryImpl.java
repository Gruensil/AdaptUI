/**
 * generated by Xtext 2.12.0
 */
package org.xtext.contextml.contextML.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.contextml.contextML.ActionCategory;
import org.xtext.contextml.contextML.Actions;
import org.xtext.contextml.contextML.AdaptCssClassOperation;
import org.xtext.contextml.contextML.AdaptationModel;
import org.xtext.contextml.contextML.AdaptationRule;
import org.xtext.contextml.contextML.AddNavLinkOperation;
import org.xtext.contextml.contextML.AddViewComponentButtonOperation;
import org.xtext.contextml.contextML.AddViewComponentOperation;
import org.xtext.contextml.contextML.BoolValue;
import org.xtext.contextml.contextML.BooleanCondition;
import org.xtext.contextml.contextML.ChangeColorSchemeOperation;
import org.xtext.contextml.contextML.ChangeFontOperation;
import org.xtext.contextml.contextML.ChangeFontSizeOperation;
import org.xtext.contextml.contextML.ChangeTableCssClassOperation;
import org.xtext.contextml.contextML.ClearNavOperation;
import org.xtext.contextml.contextML.ConditionalAndExpression;
import org.xtext.contextml.contextML.ConditionalOrExpression;
import org.xtext.contextml.contextML.ConditionalPrimary;
import org.xtext.contextml.contextML.ContextMLFactory;
import org.xtext.contextml.contextML.ContextMLPackage;
import org.xtext.contextml.contextML.ContextModel;
import org.xtext.contextml.contextML.DefType;
import org.xtext.contextml.contextML.DefTypes;
import org.xtext.contextml.contextML.DeleteNavLinkOperation;
import org.xtext.contextml.contextML.DeleteViewComponentButtonOperation;
import org.xtext.contextml.contextML.DeleteViewComponentOperation;
import org.xtext.contextml.contextML.DisplayPropertyValue;
import org.xtext.contextml.contextML.EditFactOperation;
import org.xtext.contextml.contextML.Entity;
import org.xtext.contextml.contextML.Enums;
import org.xtext.contextml.contextML.Fact;
import org.xtext.contextml.contextML.FactName;
import org.xtext.contextml.contextML.FactProperty;
import org.xtext.contextml.contextML.Function;
import org.xtext.contextml.contextML.FunctionList;
import org.xtext.contextml.contextML.IntValue;
import org.xtext.contextml.contextML.Model;
import org.xtext.contextml.contextML.NumberCondition;
import org.xtext.contextml.contextML.ParentOperation;
import org.xtext.contextml.contextML.Property;
import org.xtext.contextml.contextML.Provider;
import org.xtext.contextml.contextML.RedirectNavLinkOperation;
import org.xtext.contextml.contextML.Service;
import org.xtext.contextml.contextML.ServiceFunctionCallOperation;
import org.xtext.contextml.contextML.ServiceList;
import org.xtext.contextml.contextML.SetDisplayPropertyOperation;
import org.xtext.contextml.contextML.StringCondition;
import org.xtext.contextml.contextML.StringValue;
import org.xtext.contextml.contextML.TYPE;
import org.xtext.contextml.contextML.UpdateType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ContextMLFactoryImpl extends EFactoryImpl implements ContextMLFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ContextMLFactory init()
  {
    try
    {
      ContextMLFactory theContextMLFactory = (ContextMLFactory)EPackage.Registry.INSTANCE.getEFactory(ContextMLPackage.eNS_URI);
      if (theContextMLFactory != null)
      {
        return theContextMLFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ContextMLFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ContextMLFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ContextMLPackage.MODEL: return createModel();
      case ContextMLPackage.CONTEXT_MODEL: return createContextModel();
      case ContextMLPackage.ADAPTATION_MODEL: return createAdaptationModel();
      case ContextMLPackage.SERVICE_LIST: return createServiceList();
      case ContextMLPackage.SERVICE: return createService();
      case ContextMLPackage.FUNCTION_LIST: return createFunctionList();
      case ContextMLPackage.FUNCTION: return createFunction();
      case ContextMLPackage.ADAPTATION_RULE: return createAdaptationRule();
      case ContextMLPackage.CONDITIONAL_OR_EXPRESSION: return createConditionalOrExpression();
      case ContextMLPackage.CONDITIONAL_AND_EXPRESSION: return createConditionalAndExpression();
      case ContextMLPackage.CONDITIONAL_PRIMARY: return createConditionalPrimary();
      case ContextMLPackage.BOOLEAN_CONDITION: return createBooleanCondition();
      case ContextMLPackage.NUMBER_CONDITION: return createNumberCondition();
      case ContextMLPackage.STRING_CONDITION: return createStringCondition();
      case ContextMLPackage.FACT: return createFact();
      case ContextMLPackage.FACT_NAME: return createFactName();
      case ContextMLPackage.FACT_PROPERTY: return createFactProperty();
      case ContextMLPackage.ACTIONS: return createActions();
      case ContextMLPackage.ACTION_CATEGORY: return createActionCategory();
      case ContextMLPackage.PARENT_OPERATION: return createParentOperation();
      case ContextMLPackage.SERVICE_FUNCTION_CALL_OPERATION: return createServiceFunctionCallOperation();
      case ContextMLPackage.EDIT_FACT_OPERATION: return createEditFactOperation();
      case ContextMLPackage.SET_DISPLAY_PROPERTY_OPERATION: return createSetDisplayPropertyOperation();
      case ContextMLPackage.DISPLAY_PROPERTY_VALUE: return createDisplayPropertyValue();
      case ContextMLPackage.INT_VALUE: return createIntValue();
      case ContextMLPackage.STRING_VALUE: return createStringValue();
      case ContextMLPackage.BOOL_VALUE: return createBoolValue();
      case ContextMLPackage.ADD_VIEW_COMPONENT_OPERATION: return createAddViewComponentOperation();
      case ContextMLPackage.DELETE_VIEW_COMPONENT_OPERATION: return createDeleteViewComponentOperation();
      case ContextMLPackage.ADD_VIEW_COMPONENT_BUTTON_OPERATION: return createAddViewComponentButtonOperation();
      case ContextMLPackage.DELETE_VIEW_COMPONENT_BUTTON_OPERATION: return createDeleteViewComponentButtonOperation();
      case ContextMLPackage.ADD_NAV_LINK_OPERATION: return createAddNavLinkOperation();
      case ContextMLPackage.DELETE_NAV_LINK_OPERATION: return createDeleteNavLinkOperation();
      case ContextMLPackage.REDIRECT_NAV_LINK_OPERATION: return createRedirectNavLinkOperation();
      case ContextMLPackage.CLEAR_NAV_OPERATION: return createClearNavOperation();
      case ContextMLPackage.CHANGE_FONT_SIZE_OPERATION: return createChangeFontSizeOperation();
      case ContextMLPackage.CHANGE_COLOR_SCHEME_OPERATION: return createChangeColorSchemeOperation();
      case ContextMLPackage.CHANGE_FONT_OPERATION: return createChangeFontOperation();
      case ContextMLPackage.CHANGE_TABLE_CSS_CLASS_OPERATION: return createChangeTableCssClassOperation();
      case ContextMLPackage.ADAPT_CSS_CLASS_OPERATION: return createAdaptCssClassOperation();
      case ContextMLPackage.ENTITY: return createEntity();
      case ContextMLPackage.PROPERTY: return createProperty();
      case ContextMLPackage.PROVIDER: return createProvider();
      case ContextMLPackage.DEF_TYPES: return createDefTypes();
      case ContextMLPackage.DEF_TYPE: return createDefType();
      case ContextMLPackage.ENUMS: return createEnums();
      case ContextMLPackage.ENUM: return createEnum();
      case ContextMLPackage.TYPE: return createTYPE();
      case ContextMLPackage.UPDATE_TYPE: return createUpdateType();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ContextModel createContextModel()
  {
    ContextModelImpl contextModel = new ContextModelImpl();
    return contextModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AdaptationModel createAdaptationModel()
  {
    AdaptationModelImpl adaptationModel = new AdaptationModelImpl();
    return adaptationModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ServiceList createServiceList()
  {
    ServiceListImpl serviceList = new ServiceListImpl();
    return serviceList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Service createService()
  {
    ServiceImpl service = new ServiceImpl();
    return service;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionList createFunctionList()
  {
    FunctionListImpl functionList = new FunctionListImpl();
    return functionList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Function createFunction()
  {
    FunctionImpl function = new FunctionImpl();
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AdaptationRule createAdaptationRule()
  {
    AdaptationRuleImpl adaptationRule = new AdaptationRuleImpl();
    return adaptationRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConditionalOrExpression createConditionalOrExpression()
  {
    ConditionalOrExpressionImpl conditionalOrExpression = new ConditionalOrExpressionImpl();
    return conditionalOrExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConditionalAndExpression createConditionalAndExpression()
  {
    ConditionalAndExpressionImpl conditionalAndExpression = new ConditionalAndExpressionImpl();
    return conditionalAndExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConditionalPrimary createConditionalPrimary()
  {
    ConditionalPrimaryImpl conditionalPrimary = new ConditionalPrimaryImpl();
    return conditionalPrimary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BooleanCondition createBooleanCondition()
  {
    BooleanConditionImpl booleanCondition = new BooleanConditionImpl();
    return booleanCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NumberCondition createNumberCondition()
  {
    NumberConditionImpl numberCondition = new NumberConditionImpl();
    return numberCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringCondition createStringCondition()
  {
    StringConditionImpl stringCondition = new StringConditionImpl();
    return stringCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Fact createFact()
  {
    FactImpl fact = new FactImpl();
    return fact;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FactName createFactName()
  {
    FactNameImpl factName = new FactNameImpl();
    return factName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FactProperty createFactProperty()
  {
    FactPropertyImpl factProperty = new FactPropertyImpl();
    return factProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Actions createActions()
  {
    ActionsImpl actions = new ActionsImpl();
    return actions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ActionCategory createActionCategory()
  {
    ActionCategoryImpl actionCategory = new ActionCategoryImpl();
    return actionCategory;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ParentOperation createParentOperation()
  {
    ParentOperationImpl parentOperation = new ParentOperationImpl();
    return parentOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ServiceFunctionCallOperation createServiceFunctionCallOperation()
  {
    ServiceFunctionCallOperationImpl serviceFunctionCallOperation = new ServiceFunctionCallOperationImpl();
    return serviceFunctionCallOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EditFactOperation createEditFactOperation()
  {
    EditFactOperationImpl editFactOperation = new EditFactOperationImpl();
    return editFactOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SetDisplayPropertyOperation createSetDisplayPropertyOperation()
  {
    SetDisplayPropertyOperationImpl setDisplayPropertyOperation = new SetDisplayPropertyOperationImpl();
    return setDisplayPropertyOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DisplayPropertyValue createDisplayPropertyValue()
  {
    DisplayPropertyValueImpl displayPropertyValue = new DisplayPropertyValueImpl();
    return displayPropertyValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntValue createIntValue()
  {
    IntValueImpl intValue = new IntValueImpl();
    return intValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringValue createStringValue()
  {
    StringValueImpl stringValue = new StringValueImpl();
    return stringValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BoolValue createBoolValue()
  {
    BoolValueImpl boolValue = new BoolValueImpl();
    return boolValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AddViewComponentOperation createAddViewComponentOperation()
  {
    AddViewComponentOperationImpl addViewComponentOperation = new AddViewComponentOperationImpl();
    return addViewComponentOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DeleteViewComponentOperation createDeleteViewComponentOperation()
  {
    DeleteViewComponentOperationImpl deleteViewComponentOperation = new DeleteViewComponentOperationImpl();
    return deleteViewComponentOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AddViewComponentButtonOperation createAddViewComponentButtonOperation()
  {
    AddViewComponentButtonOperationImpl addViewComponentButtonOperation = new AddViewComponentButtonOperationImpl();
    return addViewComponentButtonOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DeleteViewComponentButtonOperation createDeleteViewComponentButtonOperation()
  {
    DeleteViewComponentButtonOperationImpl deleteViewComponentButtonOperation = new DeleteViewComponentButtonOperationImpl();
    return deleteViewComponentButtonOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AddNavLinkOperation createAddNavLinkOperation()
  {
    AddNavLinkOperationImpl addNavLinkOperation = new AddNavLinkOperationImpl();
    return addNavLinkOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DeleteNavLinkOperation createDeleteNavLinkOperation()
  {
    DeleteNavLinkOperationImpl deleteNavLinkOperation = new DeleteNavLinkOperationImpl();
    return deleteNavLinkOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RedirectNavLinkOperation createRedirectNavLinkOperation()
  {
    RedirectNavLinkOperationImpl redirectNavLinkOperation = new RedirectNavLinkOperationImpl();
    return redirectNavLinkOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ClearNavOperation createClearNavOperation()
  {
    ClearNavOperationImpl clearNavOperation = new ClearNavOperationImpl();
    return clearNavOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChangeFontSizeOperation createChangeFontSizeOperation()
  {
    ChangeFontSizeOperationImpl changeFontSizeOperation = new ChangeFontSizeOperationImpl();
    return changeFontSizeOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChangeColorSchemeOperation createChangeColorSchemeOperation()
  {
    ChangeColorSchemeOperationImpl changeColorSchemeOperation = new ChangeColorSchemeOperationImpl();
    return changeColorSchemeOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChangeFontOperation createChangeFontOperation()
  {
    ChangeFontOperationImpl changeFontOperation = new ChangeFontOperationImpl();
    return changeFontOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChangeTableCssClassOperation createChangeTableCssClassOperation()
  {
    ChangeTableCssClassOperationImpl changeTableCssClassOperation = new ChangeTableCssClassOperationImpl();
    return changeTableCssClassOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AdaptCssClassOperation createAdaptCssClassOperation()
  {
    AdaptCssClassOperationImpl adaptCssClassOperation = new AdaptCssClassOperationImpl();
    return adaptCssClassOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity createEntity()
  {
    EntityImpl entity = new EntityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Property createProperty()
  {
    PropertyImpl property = new PropertyImpl();
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Provider createProvider()
  {
    ProviderImpl provider = new ProviderImpl();
    return provider;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefTypes createDefTypes()
  {
    DefTypesImpl defTypes = new DefTypesImpl();
    return defTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DefType createDefType()
  {
    DefTypeImpl defType = new DefTypeImpl();
    return defType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Enums createEnums()
  {
    EnumsImpl enums = new EnumsImpl();
    return enums;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.xtext.contextml.contextML.Enum createEnum()
  {
    EnumImpl enum_ = new EnumImpl();
    return enum_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TYPE createTYPE()
  {
    TYPEImpl type = new TYPEImpl();
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UpdateType createUpdateType()
  {
    UpdateTypeImpl updateType = new UpdateTypeImpl();
    return updateType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ContextMLPackage getContextMLPackage()
  {
    return (ContextMLPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ContextMLPackage getPackage()
  {
    return ContextMLPackage.eINSTANCE;
  }

} //ContextMLFactoryImpl
